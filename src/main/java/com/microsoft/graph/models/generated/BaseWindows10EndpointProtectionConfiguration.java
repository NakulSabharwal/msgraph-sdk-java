// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.generated;
import com.microsoft.graph.concurrency.*;
import com.microsoft.graph.core.*;
import com.microsoft.graph.http.*;
import com.microsoft.graph.options.*;
import com.microsoft.graph.serializer.*;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.models.generated.FirewallPreSharedKeyEncodingMethodType;
import com.microsoft.graph.models.generated.FirewallCertificateRevocationListCheckMethodType;
import com.microsoft.graph.models.generated.FirewallPacketQueueingMethodType;
import com.microsoft.graph.models.extensions.WindowsFirewallNetworkProfile;
import com.microsoft.graph.models.extensions.WindowsFirewallNetworkProfile;
import com.microsoft.graph.models.extensions.WindowsFirewallNetworkProfile;
import com.microsoft.graph.models.generated.AppLockerApplicationControlType;
import com.microsoft.graph.models.generated.ApplicationGuardBlockFileTransferType;
import com.microsoft.graph.models.generated.ApplicationGuardBlockClipboardSharingType;
import com.microsoft.graph.models.extensions.BitLockerRemovableDrivePolicy;
import com.microsoft.graph.models.extensions.DeviceConfiguration;


import com.google.gson.JsonObject;
import com.google.gson.JsonElement;
import com.google.gson.annotations.*;
import java.util.HashMap;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Base Windows10Endpoint Protection Configuration.
 */
public class BaseWindows10EndpointProtectionConfiguration extends DeviceConfiguration implements IJsonBackedObject {


    /**
     * The Firewall Block Stateful FTP.
     * 
     */
    @SerializedName("firewallBlockStatefulFTP")
    @Expose
    public Boolean firewallBlockStatefulFTP;

    /**
     * The Firewall Idle Timeout For Security Association In Seconds.
     * 
     */
    @SerializedName("firewallIdleTimeoutForSecurityAssociationInSeconds")
    @Expose
    public Integer firewallIdleTimeoutForSecurityAssociationInSeconds;

    /**
     * The Firewall Pre Shared Key Encoding Method.
     * 
     */
    @SerializedName("firewallPreSharedKeyEncodingMethod")
    @Expose
    public FirewallPreSharedKeyEncodingMethodType firewallPreSharedKeyEncodingMethod;

    /**
     * The Firewall IPSec Exemptions Allow Neighbor Discovery.
     * 
     */
    @SerializedName("firewallIPSecExemptionsAllowNeighborDiscovery")
    @Expose
    public Boolean firewallIPSecExemptionsAllowNeighborDiscovery;

    /**
     * The Firewall IPSec Exemptions Allow ICMP.
     * 
     */
    @SerializedName("firewallIPSecExemptionsAllowICMP")
    @Expose
    public Boolean firewallIPSecExemptionsAllowICMP;

    /**
     * The Firewall IPSec Exemptions Allow Router Discovery.
     * 
     */
    @SerializedName("firewallIPSecExemptionsAllowRouterDiscovery")
    @Expose
    public Boolean firewallIPSecExemptionsAllowRouterDiscovery;

    /**
     * The Firewall IPSec Exemptions Allow DHCP.
     * 
     */
    @SerializedName("firewallIPSecExemptionsAllowDHCP")
    @Expose
    public Boolean firewallIPSecExemptionsAllowDHCP;

    /**
     * The Firewall Certificate Revocation List Check Method.
     * 
     */
    @SerializedName("firewallCertificateRevocationListCheckMethod")
    @Expose
    public FirewallCertificateRevocationListCheckMethodType firewallCertificateRevocationListCheckMethod;

    /**
     * The Firewall Merge Keying Module Settings.
     * 
     */
    @SerializedName("firewallMergeKeyingModuleSettings")
    @Expose
    public Boolean firewallMergeKeyingModuleSettings;

    /**
     * The Firewall Packet Queueing Method.
     * 
     */
    @SerializedName("firewallPacketQueueingMethod")
    @Expose
    public FirewallPacketQueueingMethodType firewallPacketQueueingMethod;

    /**
     * The Firewall Profile Domain.
     * 
     */
    @SerializedName("firewallProfileDomain")
    @Expose
    public WindowsFirewallNetworkProfile firewallProfileDomain;

    /**
     * The Firewall Profile Public.
     * 
     */
    @SerializedName("firewallProfilePublic")
    @Expose
    public WindowsFirewallNetworkProfile firewallProfilePublic;

    /**
     * The Firewall Profile Private.
     * 
     */
    @SerializedName("firewallProfilePrivate")
    @Expose
    public WindowsFirewallNetworkProfile firewallProfilePrivate;

    /**
     * The Defender Attack Surface Reduction Excluded Paths.
     * 
     */
    @SerializedName("defenderAttackSurfaceReductionExcludedPaths")
    @Expose
    public java.util.List<String> defenderAttackSurfaceReductionExcludedPaths;

    /**
     * The Defender Guarded Folders Allowed App Paths.
     * 
     */
    @SerializedName("defenderGuardedFoldersAllowedAppPaths")
    @Expose
    public java.util.List<String> defenderGuardedFoldersAllowedAppPaths;

    /**
     * The Defender Additional Guarded Folders.
     * 
     */
    @SerializedName("defenderAdditionalGuardedFolders")
    @Expose
    public java.util.List<String> defenderAdditionalGuardedFolders;

    /**
     * The Defender Exploit Protection Xml.
     * 
     */
    @SerializedName("defenderExploitProtectionXml")
    @Expose
    public byte[] defenderExploitProtectionXml;

    /**
     * The Defender Exploit Protection Xml File Name.
     * 
     */
    @SerializedName("defenderExploitProtectionXmlFileName")
    @Expose
    public String defenderExploitProtectionXmlFileName;

    /**
     * The Defender Security Center Block Exploit Protection Override.
     * 
     */
    @SerializedName("defenderSecurityCenterBlockExploitProtectionOverride")
    @Expose
    public Boolean defenderSecurityCenterBlockExploitProtectionOverride;

    /**
     * The App Locker Application Control.
     * 
     */
    @SerializedName("appLockerApplicationControl")
    @Expose
    public AppLockerApplicationControlType appLockerApplicationControl;

    /**
     * The Smart Screen Enable In Shell.
     * 
     */
    @SerializedName("smartScreenEnableInShell")
    @Expose
    public Boolean smartScreenEnableInShell;

    /**
     * The Smart Screen Block Override For Files.
     * 
     */
    @SerializedName("smartScreenBlockOverrideForFiles")
    @Expose
    public Boolean smartScreenBlockOverrideForFiles;

    /**
     * The Application Guard Enabled.
     * 
     */
    @SerializedName("applicationGuardEnabled")
    @Expose
    public Boolean applicationGuardEnabled;

    /**
     * The Application Guard Block File Transfer.
     * 
     */
    @SerializedName("applicationGuardBlockFileTransfer")
    @Expose
    public ApplicationGuardBlockFileTransferType applicationGuardBlockFileTransfer;

    /**
     * The Application Guard Block Non Enterprise Content.
     * 
     */
    @SerializedName("applicationGuardBlockNonEnterpriseContent")
    @Expose
    public Boolean applicationGuardBlockNonEnterpriseContent;

    /**
     * The Application Guard Allow Persistence.
     * 
     */
    @SerializedName("applicationGuardAllowPersistence")
    @Expose
    public Boolean applicationGuardAllowPersistence;

    /**
     * The Application Guard Force Auditing.
     * 
     */
    @SerializedName("applicationGuardForceAuditing")
    @Expose
    public Boolean applicationGuardForceAuditing;

    /**
     * The Application Guard Block Clipboard Sharing.
     * 
     */
    @SerializedName("applicationGuardBlockClipboardSharing")
    @Expose
    public ApplicationGuardBlockClipboardSharingType applicationGuardBlockClipboardSharing;

    /**
     * The Application Guard Allow Print To PDF.
     * 
     */
    @SerializedName("applicationGuardAllowPrintToPDF")
    @Expose
    public Boolean applicationGuardAllowPrintToPDF;

    /**
     * The Application Guard Allow Print To XPS.
     * 
     */
    @SerializedName("applicationGuardAllowPrintToXPS")
    @Expose
    public Boolean applicationGuardAllowPrintToXPS;

    /**
     * The Application Guard Allow Print To Local Printers.
     * 
     */
    @SerializedName("applicationGuardAllowPrintToLocalPrinters")
    @Expose
    public Boolean applicationGuardAllowPrintToLocalPrinters;

    /**
     * The Application Guard Allow Print To Network Printers.
     * 
     */
    @SerializedName("applicationGuardAllowPrintToNetworkPrinters")
    @Expose
    public Boolean applicationGuardAllowPrintToNetworkPrinters;

    /**
     * The Bit Locker Disable Warning For Other Disk Encryption.
     * 
     */
    @SerializedName("bitLockerDisableWarningForOtherDiskEncryption")
    @Expose
    public Boolean bitLockerDisableWarningForOtherDiskEncryption;

    /**
     * The Bit Locker Enable Storage Card Encryption On Mobile.
     * 
     */
    @SerializedName("bitLockerEnableStorageCardEncryptionOnMobile")
    @Expose
    public Boolean bitLockerEnableStorageCardEncryptionOnMobile;

    /**
     * The Bit Locker Encrypt Device.
     * 
     */
    @SerializedName("bitLockerEncryptDevice")
    @Expose
    public Boolean bitLockerEncryptDevice;

    /**
     * The Bit Locker Removable Drive Policy.
     * 
     */
    @SerializedName("bitLockerRemovableDrivePolicy")
    @Expose
    public BitLockerRemovableDrivePolicy bitLockerRemovableDrivePolicy;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;

    }
}
