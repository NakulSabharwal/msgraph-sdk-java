// ------------------------------------------------------------------------------
// Copyright (c) Microsoft Corporation.  All Rights Reserved.  Licensed under the MIT License.  See License in the project root for license information.
// ------------------------------------------------------------------------------

package com.microsoft.graph.models.generated;
import com.microsoft.graph.concurrency.*;
import com.microsoft.graph.core.*;
import com.microsoft.graph.http.*;
import com.microsoft.graph.options.*;
import com.microsoft.graph.serializer.*;
import java.util.Arrays;
import java.util.EnumSet;
import com.microsoft.graph.models.extensions.DeviceActionResult;
import com.microsoft.graph.models.generated.ComplianceState;
import com.microsoft.graph.models.generated.ManagementAgentType;
import com.microsoft.graph.models.generated.DeviceEnrollmentType;
import com.microsoft.graph.models.generated.DeviceRegistrationState;
import com.microsoft.graph.models.generated.DeviceManagementExchangeAccessState;
import com.microsoft.graph.models.generated.DeviceManagementExchangeAccessStateReason;
import com.microsoft.graph.models.extensions.ConfigurationManagerClientEnabledFeatures;
import com.microsoft.graph.models.extensions.DeviceHealthAttestationState;
import com.microsoft.graph.models.generated.ManagedDevicePartnerReportedHealthState;
import com.microsoft.graph.models.extensions.DeviceConfigurationState;
import com.microsoft.graph.models.extensions.DeviceCategory;
import com.microsoft.graph.models.extensions.DeviceCompliancePolicyState;
import com.microsoft.graph.models.extensions.Entity;
import com.microsoft.graph.requests.generated.BaseDeviceConfigurationStateCollectionResponse;
import com.microsoft.graph.requests.extensions.DeviceConfigurationStateCollectionPage;
import com.microsoft.graph.requests.generated.BaseDeviceCompliancePolicyStateCollectionResponse;
import com.microsoft.graph.requests.extensions.DeviceCompliancePolicyStateCollectionPage;


import com.google.gson.JsonObject;
import com.google.gson.JsonElement;
import com.google.gson.annotations.*;
import java.util.HashMap;
import java.util.Map;

// **NOTE** This file was generated by a tool and any changes will be overwritten.

/**
 * The class for the Base Managed Device.
 */
public class BaseManagedDevice extends Entity implements IJsonBackedObject {


    /**
     * The User Id.
     * 
     */
    @SerializedName("userId")
    @Expose
    public String userId;

    /**
     * The Device Name.
     * 
     */
    @SerializedName("deviceName")
    @Expose
    public String deviceName;

    /**
     * The Device Action Results.
     * 
     */
    @SerializedName("deviceActionResults")
    @Expose
    public java.util.List<DeviceActionResult> deviceActionResults;

    /**
     * The Enrolled Date Time.
     * 
     */
    @SerializedName("enrolledDateTime")
    @Expose
    public java.util.Calendar enrolledDateTime;

    /**
     * The Last Sync Date Time.
     * 
     */
    @SerializedName("lastSyncDateTime")
    @Expose
    public java.util.Calendar lastSyncDateTime;

    /**
     * The Operating System.
     * 
     */
    @SerializedName("operatingSystem")
    @Expose
    public String operatingSystem;

    /**
     * The Compliance State.
     * 
     */
    @SerializedName("complianceState")
    @Expose
    public ComplianceState complianceState;

    /**
     * The Jail Broken.
     * 
     */
    @SerializedName("jailBroken")
    @Expose
    public String jailBroken;

    /**
     * The Management Agent.
     * 
     */
    @SerializedName("managementAgent")
    @Expose
    public ManagementAgentType managementAgent;

    /**
     * The Os Version.
     * 
     */
    @SerializedName("osVersion")
    @Expose
    public String osVersion;

    /**
     * The Eas Activated.
     * 
     */
    @SerializedName("easActivated")
    @Expose
    public Boolean easActivated;

    /**
     * The Eas Device Id.
     * 
     */
    @SerializedName("easDeviceId")
    @Expose
    public String easDeviceId;

    /**
     * The Eas Activation Date Time.
     * 
     */
    @SerializedName("easActivationDateTime")
    @Expose
    public java.util.Calendar easActivationDateTime;

    /**
     * The Azure ADRegistered.
     * 
     */
    @SerializedName("azureADRegistered")
    @Expose
    public Boolean azureADRegistered;

    /**
     * The Device Enrollment Type.
     * 
     */
    @SerializedName("deviceEnrollmentType")
    @Expose
    public DeviceEnrollmentType deviceEnrollmentType;

    /**
     * The Activation Lock Bypass Code.
     * 
     */
    @SerializedName("activationLockBypassCode")
    @Expose
    public String activationLockBypassCode;

    /**
     * The Email Address.
     * 
     */
    @SerializedName("emailAddress")
    @Expose
    public String emailAddress;

    /**
     * The Azure ADDevice Id.
     * 
     */
    @SerializedName("azureADDeviceId")
    @Expose
    public String azureADDeviceId;

    /**
     * The Device Registration State.
     * 
     */
    @SerializedName("deviceRegistrationState")
    @Expose
    public DeviceRegistrationState deviceRegistrationState;

    /**
     * The Device Category Display Name.
     * 
     */
    @SerializedName("deviceCategoryDisplayName")
    @Expose
    public String deviceCategoryDisplayName;

    /**
     * The Is Supervised.
     * 
     */
    @SerializedName("isSupervised")
    @Expose
    public Boolean isSupervised;

    /**
     * The Exchange Last Successful Sync Date Time.
     * 
     */
    @SerializedName("exchangeLastSuccessfulSyncDateTime")
    @Expose
    public java.util.Calendar exchangeLastSuccessfulSyncDateTime;

    /**
     * The Exchange Access State.
     * 
     */
    @SerializedName("exchangeAccessState")
    @Expose
    public DeviceManagementExchangeAccessState exchangeAccessState;

    /**
     * The Exchange Access State Reason.
     * 
     */
    @SerializedName("exchangeAccessStateReason")
    @Expose
    public DeviceManagementExchangeAccessStateReason exchangeAccessStateReason;

    /**
     * The Remote Assistance Session Url.
     * 
     */
    @SerializedName("remoteAssistanceSessionUrl")
    @Expose
    public String remoteAssistanceSessionUrl;

    /**
     * The Remote Assistance Session Error Details.
     * 
     */
    @SerializedName("remoteAssistanceSessionErrorDetails")
    @Expose
    public String remoteAssistanceSessionErrorDetails;

    /**
     * The Is Encrypted.
     * 
     */
    @SerializedName("isEncrypted")
    @Expose
    public Boolean isEncrypted;

    /**
     * The User Principal Name.
     * 
     */
    @SerializedName("userPrincipalName")
    @Expose
    public String userPrincipalName;

    /**
     * The Model.
     * 
     */
    @SerializedName("model")
    @Expose
    public String model;

    /**
     * The Manufacturer.
     * 
     */
    @SerializedName("manufacturer")
    @Expose
    public String manufacturer;

    /**
     * The Imei.
     * 
     */
    @SerializedName("imei")
    @Expose
    public String imei;

    /**
     * The Compliance Grace Period Expiration Date Time.
     * 
     */
    @SerializedName("complianceGracePeriodExpirationDateTime")
    @Expose
    public java.util.Calendar complianceGracePeriodExpirationDateTime;

    /**
     * The Serial Number.
     * 
     */
    @SerializedName("serialNumber")
    @Expose
    public String serialNumber;

    /**
     * The Phone Number.
     * 
     */
    @SerializedName("phoneNumber")
    @Expose
    public String phoneNumber;

    /**
     * The Android Security Patch Level.
     * 
     */
    @SerializedName("androidSecurityPatchLevel")
    @Expose
    public String androidSecurityPatchLevel;

    /**
     * The User Display Name.
     * 
     */
    @SerializedName("userDisplayName")
    @Expose
    public String userDisplayName;

    /**
     * The Configuration Manager Client Enabled Features.
     * 
     */
    @SerializedName("configurationManagerClientEnabledFeatures")
    @Expose
    public ConfigurationManagerClientEnabledFeatures configurationManagerClientEnabledFeatures;

    /**
     * The Wi Fi Mac Address.
     * 
     */
    @SerializedName("wiFiMacAddress")
    @Expose
    public String wiFiMacAddress;

    /**
     * The Device Health Attestation State.
     * 
     */
    @SerializedName("deviceHealthAttestationState")
    @Expose
    public DeviceHealthAttestationState deviceHealthAttestationState;

    /**
     * The Subscriber Carrier.
     * 
     */
    @SerializedName("subscriberCarrier")
    @Expose
    public String subscriberCarrier;

    /**
     * The Meid.
     * 
     */
    @SerializedName("meid")
    @Expose
    public String meid;

    /**
     * The Total Storage Space In Bytes.
     * 
     */
    @SerializedName("totalStorageSpaceInBytes")
    @Expose
    public Long totalStorageSpaceInBytes;

    /**
     * The Free Storage Space In Bytes.
     * 
     */
    @SerializedName("freeStorageSpaceInBytes")
    @Expose
    public Long freeStorageSpaceInBytes;

    /**
     * The Managed Device Name.
     * 
     */
    @SerializedName("managedDeviceName")
    @Expose
    public String managedDeviceName;

    /**
     * The Partner Reported Threat State.
     * 
     */
    @SerializedName("partnerReportedThreatState")
    @Expose
    public ManagedDevicePartnerReportedHealthState partnerReportedThreatState;

    /**
     * The Device Configuration States.
     * 
     */
    public DeviceConfigurationStateCollectionPage deviceConfigurationStates;

    /**
     * The Device Category.
     * 
     */
    @SerializedName("deviceCategory")
    @Expose
    public DeviceCategory deviceCategory;

    /**
     * The Device Compliance Policy States.
     * 
     */
    public DeviceCompliancePolicyStateCollectionPage deviceCompliancePolicyStates;


    /**
     * The raw representation of this class
     */
    private JsonObject rawObject;

    /**
     * The serializer
     */
    private ISerializer serializer;

    /**
     * Gets the raw representation of this class
     *
     * @return the raw representation of this class
     */
    public JsonObject getRawObject() {
        return rawObject;
    }

    /**
     * Gets serializer
     *
     * @return the serializer
     */
    protected ISerializer getSerializer() {
        return serializer;
    }

    /**
     * Sets the raw JSON object
     *
     * @param serializer the serializer
     * @param json the JSON object to set this object to
     */
    public void setRawObject(final ISerializer serializer, final JsonObject json) {
        this.serializer = serializer;
        rawObject = json;


        if (json.has("deviceConfigurationStates")) {
            final BaseDeviceConfigurationStateCollectionResponse response = new BaseDeviceConfigurationStateCollectionResponse();
            if (json.has("deviceConfigurationStates@odata.nextLink")) {
                response.nextLink = json.get("deviceConfigurationStates@odata.nextLink").getAsString();
            }

            final JsonObject[] sourceArray = serializer.deserializeObject(json.get("deviceConfigurationStates").toString(), JsonObject[].class);
            final DeviceConfigurationState[] array = new DeviceConfigurationState[sourceArray.length];
            for (int i = 0; i < sourceArray.length; i++) {
                array[i] = serializer.deserializeObject(sourceArray[i].toString(), DeviceConfigurationState.class);
                array[i].setRawObject(serializer, sourceArray[i]);
            }
            response.value = Arrays.asList(array);
            deviceConfigurationStates = new DeviceConfigurationStateCollectionPage(response, null);
        }

        if (json.has("deviceCompliancePolicyStates")) {
            final BaseDeviceCompliancePolicyStateCollectionResponse response = new BaseDeviceCompliancePolicyStateCollectionResponse();
            if (json.has("deviceCompliancePolicyStates@odata.nextLink")) {
                response.nextLink = json.get("deviceCompliancePolicyStates@odata.nextLink").getAsString();
            }

            final JsonObject[] sourceArray = serializer.deserializeObject(json.get("deviceCompliancePolicyStates").toString(), JsonObject[].class);
            final DeviceCompliancePolicyState[] array = new DeviceCompliancePolicyState[sourceArray.length];
            for (int i = 0; i < sourceArray.length; i++) {
                array[i] = serializer.deserializeObject(sourceArray[i].toString(), DeviceCompliancePolicyState.class);
                array[i].setRawObject(serializer, sourceArray[i]);
            }
            response.value = Arrays.asList(array);
            deviceCompliancePolicyStates = new DeviceCompliancePolicyStateCollectionPage(response, null);
        }
    }
}
